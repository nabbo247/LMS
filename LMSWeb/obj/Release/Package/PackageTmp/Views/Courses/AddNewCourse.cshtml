@model LMSBL.DBModels.tblCourse
@{
    ViewBag.Title = "New Course";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

@using (Html.BeginForm("AddCourse", "Courses", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid mt-4 mb-4 pl-4 pr-4">       
        <div class="row justify-content-center h-100">
            <div class="col align-self-center add-user-section ">
                <div class="col">
                    @if (Model.ContentModuleId == 0)
                    {
                        <h4 class="mt-3 ml-2 mb-3">New Course</h4>
                    }
                    else
                    {
                        <h4 class="mt-3 ml-2 mb-3">Edit Course</h4>
                    }
                </div>
                <div class="row pt-5 pl-4">
                    <div class="col-sm-6">

                        @Html.HiddenFor(model => model.ContentModuleId)
                        @Html.HiddenFor(model => model.ContentModuleURL)
                        @Html.TextBoxFor(model => model.ContentModuleName, new { @class = "input100", placeholder = "Course Name" })
                        @Html.TextBoxFor(model => model.ContentModuleDescription, new { @class = "input100", placeholder = "Course Description" })
                        @Html.TextBoxFor(model => model.MasteryScore, "{0:#.#}", new { @class = "input100", placeholder = "Course Mastery Score" })
                        @Html.TextBoxFor(model => model.Duration, "{0:#.#}", new { @class = "input100", placeholder = "Course Duration (Mins)" })

                        @if (Model != null)
                        {
                            if (!string.IsNullOrEmpty(Model.ContentModuleURL))
                            {
                                Model.ContentModuleURL = Model.ContentModuleURL + "\\" + Model.ContentModuleId + ".zip";
                            }
                        }

                    </div>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(x => Model.ContentModuleType, new SelectList(new List<Object>{
                              new { value = "Scorm1.2" , text = "Scorm1.2"  }
                           }, "value", "text"), htmlAttributes: new { @class = "input100", id = "CourseTypeList" })
                        <div>
                            Upload Course 
                        </div>

                        <input type="file" name="file" id="file" style="width: 100%;" accept=".zip" />
                        <div>
                            <small>(File should not exceed 20 MB)</small>
                        </div>

                        <div class="col-3 p-0" id="lnkCourseFile">
                            <a href="#">
                                @Model.ContentModuleURL
                            </a>
                        </div>
                        @*@Html.TextBoxFor(model => model.LastName, new { @class = "input100", placeholder = "Last Name" })
                @Html.TextBoxFor(model => model.DOB, "{0:MM/dd/yyyy}", new { @class = "input100 datepicker", @id = "dtDOB", @readonly = "readonly", @autocomplete = "off", placeholder = "Date of Birth" })
                @Html.TextBoxFor(model => model.ContactNo, new { @class = "input100", placeholder = "Contact No" })*@
                    </div>
                </div>
                <div class="row justify-content-end pr-4">
                    <button type="submit" id="btnCourseSubmit" class="btn btn-primary profle-submit-btn mr-4"><img src="~/assets/images/check-img.png" /> Save Changes</button>
                    <button type="submit" onclick="location.href='@Url.Action("Index", "Courses")';return false;" class="btn btn-outline-primary cancel-btn"><i class="far fa-times-circle"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/assets/Validations.js"></script>