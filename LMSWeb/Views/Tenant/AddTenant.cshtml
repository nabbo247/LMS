@model LMSBL.DBModels.TblTenant
@{
    ViewBag.Title = "AddTenant";
    //Layout = "~/Views/_ViewStart.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddTenant</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Add New Tenant</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TenantName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenantName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenantName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenantDomain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenantDomain, new { htmlAttributes = new { @class = "form-control", @id = "txtdomainName" } })
                    @Html.ValidationMessageFor(model => model.TenantDomain, "", new { @class = "text-danger" })
                    <input type="button" id="btnTenantDomainName" value="verify" class="btn btn-default btn-success"/>
                    <label id="lblerrorDomain" style="display:none">Domain Name Already Exists</label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActivationFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActivationFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivationFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActivationTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActivationTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivationTo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NoOfUserAllowed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfUserAllowed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfUserAllowed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "yy-mm-dd",
                showWeek: true
            });

            $("#txtdomainName").keypress(function () {
                $("#lblerrorDomain").hide()
            });

            $("#btnTenantDomainName").click(function () {
                VerifyTenantDomain($('#txtdomainName').val());
            })
        });


        function VerifyTenantDomain(DominName) {
            $.ajax({
                url: "/Tenant/VerifyTenantDomain?Domain=" + DominName,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {                    
                    if(result==1)
                    {
                        $("#lblerrorDomain").html("Domain Name is not Available !!!");
                        $("#lblerrorDomain").css("color", "Red");
                    }
                    else
                    {
                        $("#lblerrorDomain").html("Domain Name is Available !!!");
                        $("#lblerrorDomain").css("color", "Green");
                    }
                    $("#lblerrorDomain").show();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    </script>
</body>
</html>
